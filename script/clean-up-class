#!/usr/bin/env bash
#
# Cleanup Class

# shellcheck disable=SC1091
source "$HOME/.trainingmanualrc"

#################################################################
# NOTE: You must have a personal access token (PAT)             #
# saved to your environment variables to use this script.       #
# We recommend a dedicated service account (e.g. githubteacher) #
#################################################################

# GLOBALS
COLLAB_REPO=$1

function GetNames() {
  # Get the collabs
  IFS=" " read -ra COLLABS <<<"$(
    curl -s -S -u "$TOKEN_OWNER:$TEACHER_PAT" -X GET "https://$INSTANCE_URL/repos/$CLASS_ORG/$COLLAB_REPO/collaborators?affiliation=direct&per_page=100" | jq -r 'map(.login) | unique | @sh' | tr -d \'
  )" >>log.out 2>&1

  # Clean up conflict repos based on collaborators in the inital class repo
  for USER_NAME in "${COLLABS[@]}"; do
    # Clean up conflict and games repos for the user
    CleanUpRepo "conflict-practice-$USER_NAME"
    CleanUpRepo "github-games-$USER_NAME"
  done
}

function CleanUpRepo() {
  # Get the Repo
  REPO=$1
  echo $(curl -s -S -i -u "$TOKEN_OWNER:$TEACHER_PAT" -X GET "https://$INSTANCE_URL/repos/$CLASS_ORG/$REPO") >> cleanlog.out
  # Get repo status
  REPO_STATUS=$(curl -s -S -i -u "$TOKEN_OWNER:$TEACHER_PAT" -X GET "https://$INSTANCE_URL/repos/$CLASS_ORG/$REPO" | grep "^Status:") >>log.out 2>&1
  echo $REPO_STATUS
  # Check the return
  if
    echo "$REPO_STATUS" | grep -iq "200"
  then
    # Remove the repo
    ./remove-repo "$REPO"
  fi
}

# Get User names
GetNames
